{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called AuthService that manages authentication state, token persistence, and user profile management for a frontend application.", "external_files": ["./api.service", "./models"], "external_methods": ["ApiService.login", "ApiService.register", "ApiService.me"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "Service managing user authentication, token storage, and user profile in an Angular app."}], "methods": [{"name": "getToken(): string | null { getToken", "description": "Retrieves the stored authentication token from local storage.", "scope": "AuthService", "scopeKind": "class"}, {"name": "private readUser(): UserProfile | null { readUser", "description": "Reads and parses the user profile from local storage.", "scope": "AuthService", "scopeKind": "class"}, {"name": "private persist(token: string, user: UserProfile) { persist", "description": "Stores the token and user profile in local storage and updates the user signal.", "scope": "AuthService", "scopeKind": "class"}, {"name": "async login(email: string, password: string): Promise<void> { login", "description": "Authenticates the user via API and stores the token and profile.", "scope": "AuthService", "scopeKind": "class"}, {"name": "async register(email: string, password: string, name?: string): Promise<void> { register", "description": "Registers a new user via API and stores the token and profile.", "scope": "AuthService", "scopeKind": "class"}, {"name": "async refreshProfile(): Promise<void> { refreshProfile", "description": "Fetches the latest profile info from the API and updates local storage.", "scope": "AuthService", "scopeKind": "class"}, {"name": "logout(): void { logout", "description": "Clears local storage and resets user signal.", "scope": "AuthService", "scopeKind": "class"}, {"name": "isAuthenticated(): boolean { isAuthenticated", "description": "Checks if a user is currently authenticated based on stored token.", "scope": "AuthService", "scopeKind": "class"}, {"name": "user = signal<UserProfile | null>(this.readUser()); this", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "calls": ["api.login", "api.register", "api.me"], "search-terms": ["AuthService", "localStorage token", "Angular signal", "API authentication", "user profile management", "auth state"], "state": 2, "file_id": 25, "knowledge_revision": 109, "git_revision": "", "revision_history": [{"56": ""}, {"109": ""}], "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "getToken", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  getToken(): string | null {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "isAuthenticated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  isAuthenticated(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  async login(email: string, password: string): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  logout(): void {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^      const me = await this.api.me();$/", "language": "TypeScript", "kind": "constant", "scope": "AuthService.refreshProfile", "scopeKind": "method"}, {"_type": "tag", "name": "persist", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  private persist(token: string, user: UserProfile) {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^      const raw = localStorage.getItem(this.userKey);$/", "language": "TypeScript", "kind": "constant", "scope": "AuthService.readUser", "scopeKind": "method"}, {"_type": "tag", "name": "readUser", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  private readUser(): UserProfile | null {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "refreshProfile", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  async refreshProfile(): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  async register(email: string, password: string, name?: string): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^      const res = await this.api.login(email, password);$/", "language": "TypeScript", "kind": "constant", "scope": "AuthService.login", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^      const res = await this.api.register(email, password, name);$/", "language": "TypeScript", "kind": "constant", "scope": "AuthService.register", "scopeKind": "method"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  user = signal<UserProfile | null>(this.readUser());$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^      const token = this.getToken();$/", "language": "TypeScript", "kind": "constant", "scope": "AuthService.refreshProfile", "scopeKind": "method"}, {"_type": "tag", "name": "tokenKey", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  private tokenKey = 'notes__token';$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  user = signal<UserProfile | null>(this.readUser());$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "userKey", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/core/auth.service.ts", "pattern": "/^  private userKey = 'notes__user';$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}], "hash": "91571adbee48729406631c86bd37d517", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/core/auth.service.ts", "fields": [{"name": "private tokenKey = 'notes__token';", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}, {"name": "user = signal<UserProfile | null>(this.readUser());", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}, {"name": "private userKey = 'notes__user';", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}]}