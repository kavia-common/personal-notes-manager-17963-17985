{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular component named RegisterComponent for user registration. It includes form controls for name, email, and password, and handles registration logic by invoking AuthService and routing upon success.", "external_files": ["../core/auth.service", "./register.component.html", "./auth.css"], "external_methods": ["AuthService.register", "this.router.navigateByUrl"], "published": ["RegisterComponent"], "classes": [{"name": "RegisterComponent", "description": "An Angular standalone component that provides user registration functionality, including form handling and integration with authentication and routing services."}], "methods": [{"name": "submit", "description": "Handles form submission for user registration. Calls the AuthService.register method and navigates to home page upon success. Sets error message on failure."}], "calls": ["this.auth.register", "this.router.navigateByUrl"], "search-terms": ["Angular registration component", "auth service registration", "signals", "standalone component", "register method", "dependency injection Angular"], "state": 2, "file_id": 45, "knowledge_revision": 101, "git_revision": "", "ctags": [{"_type": "tag", "name": "RegisterComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/auth/register.component.ts", "pattern": "/^export class RegisterComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/auth/register.component.ts", "pattern": "/^  private auth = inject(AuthService);$/", "language": "TypeScript", "kind": "property", "scope": "RegisterComponent", "scopeKind": "class"}], "hash": "f8c726f6c20a8d1d4ea76eadd99228df", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/auth/register.component.ts", "fields": [{"name": "private auth = inject(AuthService);", "scope": "RegisterComponent", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"101": ""}]}