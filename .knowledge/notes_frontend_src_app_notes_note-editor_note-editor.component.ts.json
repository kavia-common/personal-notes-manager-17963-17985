{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines the NoteEditorComponent in an Angular application, responsible for editing and managing notes, handling form input, and interacting with the NotesService.", "external_files": ["../../core/notes.service", "../../core/models", "./note-editor.component.html", "./note-editor.component.css"], "external_methods": ["NotesService.loadCategories()", "NotesService.get(id)", "NotesService.categories()", "NotesService.update(id, data)", "NotesService.create(note)"], "published": [], "classes": [{"name": "NoteEditorComponent", "description": "Angular component for editing notes, utilizing signals for form state, and integrating with routing and service layers."}], "methods": [{"name": "ngOnInit", "description": "Initializes the component by loading categories and fetching note data if editing an existing note."}, {"name": "categories", "description": "Returns the list of categories from NotesService."}, {"name": "onTitleChange", "description": "Updates the note title in the form state."}, {"name": "onCategoryChange", "description": "Handles change in category selection, normalizing empty string to null."}, {"name": "onContentChange", "description": "Updates the note content in the form state."}, {"name": "save", "description": "Saves the note by either updating an existing one or creating a new note, then navigating to the home page."}, {"name": "cancel", "description": "Navigates back to the home page without saving."}], "calls": ["this.notes.loadCategories()", "this.notes.get(id)", "this.notes.categories()", "this.notes.update(this.noteId()!, data)", "this.notes.create({...})", "this.router.navigateByUrl('/')"], "search-terms": ["Angular NoteEditorComponent", "signal form handling", "NoteService interaction", "routing in Angular", "ngOnInit"], "state": 2, "file_id": 30, "knowledge_revision": 120, "git_revision": "", "revision_history": [{"66": ""}, {"108": ""}, {"116": ""}, {"120": ""}], "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent implements OnInit {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^      const created = await this.notes.create({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^    const data = this.form();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^    const id = this.route.snapshot.paramMap.get('id');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^      const n = await this.notes.get(id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "normalized", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^    const normalized = (val === '' ? null : val);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "route", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17963-17985/notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "pattern": "/^  private route = inject(ActivatedRoute);$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}], "hash": "0c40bccf5f2ddf1c2e59145c1376ed74", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/notes/note-editor/note-editor.component.ts", "fields": [{"name": "private route = inject(ActivatedRoute);", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}]}